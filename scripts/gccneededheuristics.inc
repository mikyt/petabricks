self._availablefeatures["-falign-functions"]=[]
heurlist.append(heuristic.NeededHeuristic("-falign-functions", self._get_available_features(benchmark, "-falign-functions"), formula.BooleanResult))
self._availablefeatures["-falign-jumps"]=[]
heurlist.append(heuristic.NeededHeuristic("-falign-jumps", self._get_available_features(benchmark, "-falign-jumps"), formula.BooleanResult))
self._availablefeatures["-falign-labels"]=[]
heurlist.append(heuristic.NeededHeuristic("-falign-labels", self._get_available_features(benchmark, "-falign-labels"), formula.BooleanResult))
self._availablefeatures["-falign-loops"]=[]
heurlist.append(heuristic.NeededHeuristic("-falign-loops", self._get_available_features(benchmark, "-falign-loops"), formula.BooleanResult))
self._availablefeatures["-fasynchronous-unwind-tables"]=[]
heurlist.append(heuristic.NeededHeuristic("-fasynchronous-unwind-tables", self._get_available_features(benchmark, "-fasynchronous-unwind-tables"), formula.BooleanResult))
self._availablefeatures["-fbranch-count-reg"]=[]
heurlist.append(heuristic.NeededHeuristic("-fbranch-count-reg", self._get_available_features(benchmark, "-fbranch-count-reg"), formula.BooleanResult))
self._availablefeatures["-fcaller-saves"]=[]
heurlist.append(heuristic.NeededHeuristic("-fcaller-saves", self._get_available_features(benchmark, "-fcaller-saves"), formula.BooleanResult))
self._availablefeatures["-fcombine-stack-adjustments"]=[]
heurlist.append(heuristic.NeededHeuristic("-fcombine-stack-adjustments", self._get_available_features(benchmark, "-fcombine-stack-adjustments"), formula.BooleanResult))
self._availablefeatures["-fcommon"]=[]
heurlist.append(heuristic.NeededHeuristic("-fcommon", self._get_available_features(benchmark, "-fcommon"), formula.BooleanResult))
self._availablefeatures["-fcompare-elim"]=[]
heurlist.append(heuristic.NeededHeuristic("-fcompare-elim", self._get_available_features(benchmark, "-fcompare-elim"), formula.BooleanResult))
self._availablefeatures["-fcprop-registers"]=[]
heurlist.append(heuristic.NeededHeuristic("-fcprop-registers", self._get_available_features(benchmark, "-fcprop-registers"), formula.BooleanResult))
self._availablefeatures["-fcrossjumping"]=[]
heurlist.append(heuristic.NeededHeuristic("-fcrossjumping", self._get_available_features(benchmark, "-fcrossjumping"), formula.BooleanResult))
self._availablefeatures["-fcse-follow-jumps"]=[]
heurlist.append(heuristic.NeededHeuristic("-fcse-follow-jumps", self._get_available_features(benchmark, "-fcse-follow-jumps"), formula.BooleanResult))
self._availablefeatures["-fdce"]=[]
heurlist.append(heuristic.NeededHeuristic("-fdce", self._get_available_features(benchmark, "-fdce"), formula.BooleanResult))
self._availablefeatures["-fdefer-pop"]=[]
heurlist.append(heuristic.NeededHeuristic("-fdefer-pop", self._get_available_features(benchmark, "-fdefer-pop"), formula.BooleanResult))
self._availablefeatures["-fdelete-null-pointer-checks"]=[]
heurlist.append(heuristic.NeededHeuristic("-fdelete-null-pointer-checks", self._get_available_features(benchmark, "-fdelete-null-pointer-checks"), formula.BooleanResult))
self._availablefeatures["-fdevirtualize"]=[]
heurlist.append(heuristic.NeededHeuristic("-fdevirtualize", self._get_available_features(benchmark, "-fdevirtualize"), formula.BooleanResult))
self._availablefeatures["-fdse"]=[]
heurlist.append(heuristic.NeededHeuristic("-fdse", self._get_available_features(benchmark, "-fdse"), formula.BooleanResult))
self._availablefeatures["-fearly-inlining"]=[]
heurlist.append(heuristic.NeededHeuristic("-fearly-inlining", self._get_available_features(benchmark, "-fearly-inlining"), formula.BooleanResult))
self._availablefeatures["-fexpensive-optimizations"]=[]
heurlist.append(heuristic.NeededHeuristic("-fexpensive-optimizations", self._get_available_features(benchmark, "-fexpensive-optimizations"), formula.BooleanResult))
self._availablefeatures["-fforward-propagate"]=[]
heurlist.append(heuristic.NeededHeuristic("-fforward-propagate", self._get_available_features(benchmark, "-fforward-propagate"), formula.BooleanResult))
self._availablefeatures["-fgcse"]=[]
heurlist.append(heuristic.NeededHeuristic("-fgcse", self._get_available_features(benchmark, "-fgcse"), formula.BooleanResult))
self._availablefeatures["-fgcse-after-reload"]=[]
heurlist.append(heuristic.NeededHeuristic("-fgcse-after-reload", self._get_available_features(benchmark, "-fgcse-after-reload"), formula.BooleanResult))
self._availablefeatures["-fgcse-lm"]=[]
heurlist.append(heuristic.NeededHeuristic("-fgcse-lm", self._get_available_features(benchmark, "-fgcse-lm"), formula.BooleanResult))
self._availablefeatures["-fguess-branch-probability"]=[]
heurlist.append(heuristic.NeededHeuristic("-fguess-branch-probability", self._get_available_features(benchmark, "-fguess-branch-probability"), formula.BooleanResult))
self._availablefeatures["-fif-conversion"]=[]
heurlist.append(heuristic.NeededHeuristic("-fif-conversion", self._get_available_features(benchmark, "-fif-conversion"), formula.BooleanResult))
self._availablefeatures["-fif-conversion2"]=[]
heurlist.append(heuristic.NeededHeuristic("-fif-conversion2", self._get_available_features(benchmark, "-fif-conversion2"), formula.BooleanResult))
self._availablefeatures["-finline-functions"]=[]
heurlist.append(heuristic.NeededHeuristic("-finline-functions", self._get_available_features(benchmark, "-finline-functions"), formula.BooleanResult))
self._availablefeatures["-finline-functions-called-once"]=[]
heurlist.append(heuristic.NeededHeuristic("-finline-functions-called-once", self._get_available_features(benchmark, "-finline-functions-called-once"), formula.BooleanResult))
self._availablefeatures["-finline-small-functions"]=[]
heurlist.append(heuristic.NeededHeuristic("-finline-small-functions", self._get_available_features(benchmark, "-finline-small-functions"), formula.BooleanResult))
self._availablefeatures["-fipa-cp"]=[]
heurlist.append(heuristic.NeededHeuristic("-fipa-cp", self._get_available_features(benchmark, "-fipa-cp"), formula.BooleanResult))
self._availablefeatures["-fipa-cp-clone"]=[]
heurlist.append(heuristic.NeededHeuristic("-fipa-cp-clone", self._get_available_features(benchmark, "-fipa-cp-clone"), formula.BooleanResult))
self._availablefeatures["-fipa-profile"]=[]
heurlist.append(heuristic.NeededHeuristic("-fipa-profile", self._get_available_features(benchmark, "-fipa-profile"), formula.BooleanResult))
self._availablefeatures["-fipa-pure-const"]=[]
heurlist.append(heuristic.NeededHeuristic("-fipa-pure-const", self._get_available_features(benchmark, "-fipa-pure-const"), formula.BooleanResult))
self._availablefeatures["-fipa-reference"]=[]
heurlist.append(heuristic.NeededHeuristic("-fipa-reference", self._get_available_features(benchmark, "-fipa-reference"), formula.BooleanResult))
self._availablefeatures["-fipa-sra"]=[]
heurlist.append(heuristic.NeededHeuristic("-fipa-sra", self._get_available_features(benchmark, "-fipa-sra"), formula.BooleanResult))
self._availablefeatures["-fivopts"]=[]
heurlist.append(heuristic.NeededHeuristic("-fivopts", self._get_available_features(benchmark, "-fivopts"), formula.BooleanResult))
self._availablefeatures["-fjump-tables"]=[]
heurlist.append(heuristic.NeededHeuristic("-fjump-tables", self._get_available_features(benchmark, "-fjump-tables"), formula.BooleanResult))
self._availablefeatures["-fmath-errno"]=[]
heurlist.append(heuristic.NeededHeuristic("-fmath-errno", self._get_available_features(benchmark, "-fmath-errno"), formula.BooleanResult))
self._availablefeatures["-fmerge-constants"]=[]
heurlist.append(heuristic.NeededHeuristic("-fmerge-constants", self._get_available_features(benchmark, "-fmerge-constants"), formula.BooleanResult))
self._availablefeatures["-fmove-loop-invariants"]=[]
heurlist.append(heuristic.NeededHeuristic("-fmove-loop-invariants", self._get_available_features(benchmark, "-fmove-loop-invariants"), formula.BooleanResult))
self._availablefeatures["-foptimize-register-move"]=[]
heurlist.append(heuristic.NeededHeuristic("-foptimize-register-move", self._get_available_features(benchmark, "-foptimize-register-move"), formula.BooleanResult))
self._availablefeatures["-foptimize-sibling-calls"]=[]
heurlist.append(heuristic.NeededHeuristic("-foptimize-sibling-calls", self._get_available_features(benchmark, "-foptimize-sibling-calls"), formula.BooleanResult))
self._availablefeatures["-fpeephole"]=[]
heurlist.append(heuristic.NeededHeuristic("-fpeephole", self._get_available_features(benchmark, "-fpeephole"), formula.BooleanResult))
self._availablefeatures["-fpeephole2"]=[]
heurlist.append(heuristic.NeededHeuristic("-fpeephole2", self._get_available_features(benchmark, "-fpeephole2"), formula.BooleanResult))
self._availablefeatures["-fpredictive-commoning"]=[]
heurlist.append(heuristic.NeededHeuristic("-fpredictive-commoning", self._get_available_features(benchmark, "-fpredictive-commoning"), formula.BooleanResult))
self._availablefeatures["-fprefetch-loop-arrays"]=[]
heurlist.append(heuristic.NeededHeuristic("-fprefetch-loop-arrays", self._get_available_features(benchmark, "-fprefetch-loop-arrays"), formula.BooleanResult))
self._availablefeatures["-fregmove"]=[]
heurlist.append(heuristic.NeededHeuristic("-fregmove", self._get_available_features(benchmark, "-fregmove"), formula.BooleanResult))
self._availablefeatures["-frename-registers"]=[]
heurlist.append(heuristic.NeededHeuristic("-frename-registers", self._get_available_features(benchmark, "-frename-registers"), formula.BooleanResult))
self._availablefeatures["-freorder-blocks"]=[]
heurlist.append(heuristic.NeededHeuristic("-freorder-blocks", self._get_available_features(benchmark, "-freorder-blocks"), formula.BooleanResult))
self._availablefeatures["-freorder-functions"]=[]
heurlist.append(heuristic.NeededHeuristic("-freorder-functions", self._get_available_features(benchmark, "-freorder-functions"), formula.BooleanResult))
self._availablefeatures["-frerun-cse-after-loop"]=[]
heurlist.append(heuristic.NeededHeuristic("-frerun-cse-after-loop", self._get_available_features(benchmark, "-frerun-cse-after-loop"), formula.BooleanResult))
self._availablefeatures["-frtti"]=[]
heurlist.append(heuristic.NeededHeuristic("-frtti", self._get_available_features(benchmark, "-frtti"), formula.BooleanResult))
self._availablefeatures["-fsched-critical-path-heuristic"]=[]
heurlist.append(heuristic.NeededHeuristic("-fsched-critical-path-heuristic", self._get_available_features(benchmark, "-fsched-critical-path-heuristic"), formula.BooleanResult))
self._availablefeatures["-fsched-dep-count-heuristic"]=[]
heurlist.append(heuristic.NeededHeuristic("-fsched-dep-count-heuristic", self._get_available_features(benchmark, "-fsched-dep-count-heuristic"), formula.BooleanResult))
self._availablefeatures["-fsched-group-heuristic"]=[]
heurlist.append(heuristic.NeededHeuristic("-fsched-group-heuristic", self._get_available_features(benchmark, "-fsched-group-heuristic"), formula.BooleanResult))
self._availablefeatures["-fsched-interblock"]=[]
heurlist.append(heuristic.NeededHeuristic("-fsched-interblock", self._get_available_features(benchmark, "-fsched-interblock"), formula.BooleanResult))
self._availablefeatures["-fsched-last-insn-heuristic"]=[]
heurlist.append(heuristic.NeededHeuristic("-fsched-last-insn-heuristic", self._get_available_features(benchmark, "-fsched-last-insn-heuristic"), formula.BooleanResult))
self._availablefeatures["-fsched-rank-heuristic"]=[]
heurlist.append(heuristic.NeededHeuristic("-fsched-rank-heuristic", self._get_available_features(benchmark, "-fsched-rank-heuristic"), formula.BooleanResult))
self._availablefeatures["-fsched-spec"]=[]
heurlist.append(heuristic.NeededHeuristic("-fsched-spec", self._get_available_features(benchmark, "-fsched-spec"), formula.BooleanResult))
self._availablefeatures["-fsched-spec-insn-heuristic"]=[]
heurlist.append(heuristic.NeededHeuristic("-fsched-spec-insn-heuristic", self._get_available_features(benchmark, "-fsched-spec-insn-heuristic"), formula.BooleanResult))
self._availablefeatures["-fsched-stalled-insns-dep"]=[]
heurlist.append(heuristic.NeededHeuristic("-fsched-stalled-insns-dep", self._get_available_features(benchmark, "-fsched-stalled-insns-dep"), formula.BooleanResult))
self._availablefeatures["-fschedule-insns2"]=[]
heurlist.append(heuristic.NeededHeuristic("-fschedule-insns2", self._get_available_features(benchmark, "-fschedule-insns2"), formula.BooleanResult))
self._availablefeatures["-fshort-enums"]=[]
heurlist.append(heuristic.NeededHeuristic("-fshort-enums", self._get_available_features(benchmark, "-fshort-enums"), formula.BooleanResult))
self._availablefeatures["-fsigned-zeros"]=[]
heurlist.append(heuristic.NeededHeuristic("-fsigned-zeros", self._get_available_features(benchmark, "-fsigned-zeros"), formula.BooleanResult))
self._availablefeatures["-fsplit-ivs-in-unroller"]=[]
heurlist.append(heuristic.NeededHeuristic("-fsplit-ivs-in-unroller", self._get_available_features(benchmark, "-fsplit-ivs-in-unroller"), formula.BooleanResult))
self._availablefeatures["-fsplit-wide-types"]=[]
heurlist.append(heuristic.NeededHeuristic("-fsplit-wide-types", self._get_available_features(benchmark, "-fsplit-wide-types"), formula.BooleanResult))
self._availablefeatures["-fstrict-aliasing"]=[]
heurlist.append(heuristic.NeededHeuristic("-fstrict-aliasing", self._get_available_features(benchmark, "-fstrict-aliasing"), formula.BooleanResult))
self._availablefeatures["-fthread-jumps"]=[]
heurlist.append(heuristic.NeededHeuristic("-fthread-jumps", self._get_available_features(benchmark, "-fthread-jumps"), formula.BooleanResult))
self._availablefeatures["-fno-threadsafe-statics"]=[]
heurlist.append(heuristic.NeededHeuristic("-fno-threadsafe-statics", self._get_available_features(benchmark, "-fno-threadsafe-statics"), formula.BooleanResult))
self._availablefeatures["-ftoplevel-reorder"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftoplevel-reorder", self._get_available_features(benchmark, "-ftoplevel-reorder"), formula.BooleanResult))
self._availablefeatures["-ftrapping-math"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftrapping-math", self._get_available_features(benchmark, "-ftrapping-math"), formula.BooleanResult))
self._availablefeatures["-ftree-bit-ccp"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-bit-ccp", self._get_available_features(benchmark, "-ftree-bit-ccp"), formula.BooleanResult))
self._availablefeatures["-ftree-builtin-call-dce"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-builtin-call-dce", self._get_available_features(benchmark, "-ftree-builtin-call-dce"), formula.BooleanResult))
self._availablefeatures["-ftree-ccp"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-ccp", self._get_available_features(benchmark, "-ftree-ccp"), formula.BooleanResult))
self._availablefeatures["-ftree-ch"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-ch", self._get_available_features(benchmark, "-ftree-ch"), formula.BooleanResult))
self._availablefeatures["-ftree-copy-prop"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-copy-prop", self._get_available_features(benchmark, "-ftree-copy-prop"), formula.BooleanResult))
self._availablefeatures["-ftree-copyrename"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-copyrename", self._get_available_features(benchmark, "-ftree-copyrename"), formula.BooleanResult))
self._availablefeatures["-ftree-cselim"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-cselim", self._get_available_features(benchmark, "-ftree-cselim"), formula.BooleanResult))
self._availablefeatures["-ftree-dce"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-dce", self._get_available_features(benchmark, "-ftree-dce"), formula.BooleanResult))
self._availablefeatures["-ftree-dominator-opts"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-dominator-opts", self._get_available_features(benchmark, "-ftree-dominator-opts"), formula.BooleanResult))
self._availablefeatures["-ftree-dse"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-dse", self._get_available_features(benchmark, "-ftree-dse"), formula.BooleanResult))
self._availablefeatures["-ftree-forwprop"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-forwprop", self._get_available_features(benchmark, "-ftree-forwprop"), formula.BooleanResult))
self._availablefeatures["-ftree-fre"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-fre", self._get_available_features(benchmark, "-ftree-fre"), formula.BooleanResult))
self._availablefeatures["-ftree-loop-distribute-patterns"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-loop-distribute-patterns", self._get_available_features(benchmark, "-ftree-loop-distribute-patterns"), formula.BooleanResult))
self._availablefeatures["-ftree-loop-if-convert"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-loop-if-convert", self._get_available_features(benchmark, "-ftree-loop-if-convert"), formula.BooleanResult))
self._availablefeatures["-ftree-loop-im"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-loop-im", self._get_available_features(benchmark, "-ftree-loop-im"), formula.BooleanResult))
self._availablefeatures["-ftree-loop-ivcanon"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-loop-ivcanon", self._get_available_features(benchmark, "-ftree-loop-ivcanon"), formula.BooleanResult))
self._availablefeatures["-ftree-loop-optimize"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-loop-optimize", self._get_available_features(benchmark, "-ftree-loop-optimize"), formula.BooleanResult))
self._availablefeatures["-ftree-phiprop"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-phiprop", self._get_available_features(benchmark, "-ftree-phiprop"), formula.BooleanResult))
self._availablefeatures["-ftree-pre"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-pre", self._get_available_features(benchmark, "-ftree-pre"), formula.BooleanResult))
self._availablefeatures["-ftree-pta"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-pta", self._get_available_features(benchmark, "-ftree-pta"), formula.BooleanResult))
self._availablefeatures["-ftree-reassoc"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-reassoc", self._get_available_features(benchmark, "-ftree-reassoc"), formula.BooleanResult))
self._availablefeatures["-ftree-scev-cprop"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-scev-cprop", self._get_available_features(benchmark, "-ftree-scev-cprop"), formula.BooleanResult))
self._availablefeatures["-ftree-sink"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-sink", self._get_available_features(benchmark, "-ftree-sink"), formula.BooleanResult))
self._availablefeatures["-ftree-slp-vectorize"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-slp-vectorize", self._get_available_features(benchmark, "-ftree-slp-vectorize"), formula.BooleanResult))
self._availablefeatures["-ftree-sra"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-sra", self._get_available_features(benchmark, "-ftree-sra"), formula.BooleanResult))
self._availablefeatures["-ftree-switch-conversion"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-switch-conversion", self._get_available_features(benchmark, "-ftree-switch-conversion"), formula.BooleanResult))
self._availablefeatures["-ftree-ter"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-ter", self._get_available_features(benchmark, "-ftree-ter"), formula.BooleanResult))
self._availablefeatures["-ftree-vect-loop-version"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-vect-loop-version", self._get_available_features(benchmark, "-ftree-vect-loop-version"), formula.BooleanResult))
self._availablefeatures["-ftree-vectorize"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-vectorize", self._get_available_features(benchmark, "-ftree-vectorize"), formula.BooleanResult))
self._availablefeatures["-ftree-vrp"]=[]
heurlist.append(heuristic.NeededHeuristic("-ftree-vrp", self._get_available_features(benchmark, "-ftree-vrp"), formula.BooleanResult))
self._availablefeatures["-funit-at-a-time"]=[]
heurlist.append(heuristic.NeededHeuristic("-funit-at-a-time", self._get_available_features(benchmark, "-funit-at-a-time"), formula.BooleanResult))
self._availablefeatures["-funswitch-loops"]=[]
heurlist.append(heuristic.NeededHeuristic("-funswitch-loops", self._get_available_features(benchmark, "-funswitch-loops"), formula.BooleanResult))
self._availablefeatures["-fvar-tracking"]=[]
heurlist.append(heuristic.NeededHeuristic("-fvar-tracking", self._get_available_features(benchmark, "-fvar-tracking"), formula.BooleanResult))
self._availablefeatures["-fvar-tracking-assignments"]=[]
heurlist.append(heuristic.NeededHeuristic("-fvar-tracking-assignments", self._get_available_features(benchmark, "-fvar-tracking-assignments"), formula.BooleanResult))
self._availablefeatures["-fvect-cost-model"]=[]
heurlist.append(heuristic.NeededHeuristic("-fvect-cost-model", self._get_available_features(benchmark, "-fvect-cost-model"), formula.BooleanResult))
self._availablefeatures["-fweb"]=[]
heurlist.append(heuristic.NeededHeuristic("-fweb", self._get_available_features(benchmark, "-fweb"), formula.BooleanResult))
