#include "../simple/copy.pbcc"

transform BitonicInner
from INC, DIR
to OUT[n]
{
  to(OUT.cell(i) ele, OUT out) from(INC inc, DIR dir) {
    int j = i ^ (int) inc;
    if(i < j) {
      bool decend = i & (int) dir;
      if(decend ^ (out.cell(i) > out.cell(j))) {
        ElementT temp = out.cell(j); 
        out.cell(j) = out.cell(i);
        out.cell(i) = temp;
      }
    }
  }
}


transform Bitonic
from IN[n]
to OUT[n]
{
  to(OUT out) from(IN in) {
    Copy1D(out, in);
    for (int dir=2;dir<=n;dir<<=1)
    {
      for (int inc=dir>>1;inc>0;inc>>=1)
      {        BitonicInner(out, inc, dir);
      }
    }
  }
}
