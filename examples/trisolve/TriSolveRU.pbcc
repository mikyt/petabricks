#ifndef TRISOLVERU_PBCC
#define TRISOLVERU_PBCC

// Right upper (RU) triangular solve
// Solve XA = B for X, where A is upper triangular

#include "TriSolveLL.pbcc"
#include "TriSolveGenerators.pbcc"

transform TriSolveRU
from UNITFLAG, A[n,n], B[n,m]
to X[n,m]
generator TriSolveUGenerator
{
    to (X x) from (UNITFLAG unitFlag, A a, B b) {
        MatrixRegion2D x2 = x.transposed();
        TriSolveLL(x2, unitFlag, a.transposed(), b.transposed());
    }
}

#endif // TRISOLVERU_PBCC
