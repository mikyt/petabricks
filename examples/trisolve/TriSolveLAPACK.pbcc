#ifndef TRISOLVELAPACK_PBCC
#define TRISOLVELAPACK_PBCC

#define INDEX2D(i0, i1, s0) ((i1) * (s0) + (i0))

%{
extern "C" void dtrsm_(char *side, char *uplo, char *transa, char *diag, const int *m, const int *n, double *alpha, double *A, const int *lda, double *B, const int *ldb);
extern "C" void strsm_(char *side, char *uplo, char *transa, char *diag, const int *m, const int *n, float *alpha, float *A, const int *lda, float *B, const int *ldb);

void trsm_wrap(char *side, char *uplo, char *transa, char *diag, const int *m, const int *n, double *alpha, double *A, const int *lda, double *B, const int *ldb) {
    dtrsm_(side, uplo, transa, diag, m, n, alpha, A, lda, B, ldb);
}
void trsm_wrap(char *side, char *uplo, char *transa, char *diag, const int *m, const int *n, float *alpha, float *A, const int *lda, float *B, const int *ldb) {
    strsm_(side, uplo, transa, diag, m, n, alpha, A, lda, B, ldb);
}
%}

transform TriSolveLAPACK
from RIGHTFLAG, UPFLAG, UNITFLAG, ALPHA, A[aw,ah]
to X[n,m]
{
    to (X x)
    from (RIGHTFLAG rightFlag, UPFLAG upFlag, UNITFLAG unitFlag,
          ALPHA _alpha, A a)
    {
        char side, uplo, transa = 'N', diag;
        const int lda = ah;
        const int ldb = m;
        double alpha = _alpha;
        ElementT *A = NULL;
        ElementT *B = NULL;

        side = rightFlag ? 'R' : 'L';
        uplo = upFlag    ? 'U' : 'L';
        diag = unitFlag  ? 'U' : 'N';

        A = new ElementT[ah * aw];
        B = new ElementT[m * n];
        if (!A || !B) {
            printf("Error allocating memory!\n");
            exit(-1);
        }

        // pack inputs
        int i, j;
        for (i = 0; i < ah; ++i) {
            for (j = 0; j < aw; ++j) {
                A[INDEX2D(i, j, ah)] = a.cell(j, i);
            }
        }
        for (i = 0; i < m; ++i) {
            for (j = 0; j < n; ++j) {
                B[INDEX2D(i, j, m)] = x.cell(j, i);
            }
        }

        trsm_wrap(&side, &uplo, &transa, &diag, &m, &n, &alpha, A, &lda, B, &ldb);

        // unpack output
        for (i = 0; i < n; ++i) {
            for (j = 0; j < m; ++j) {
                x.cell(i, j) = B[INDEX2D(j, i, m)];
            }
        }

        delete [] A;
        delete [] B;
    }
}

#endif // TRISOLVELAPACK_PBCC
