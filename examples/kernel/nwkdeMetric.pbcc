#ifndef NWKDEMETRIC_PBCC
#define NWKDEMETRIC_PBCC

#include "nwkde.h"
#include "utils.pbcc"

#define BIGNUM (1e100)

%{

/* This function returns the negative MSE produced by NWKDE transforms.
 */
template<typename ConstMatrixRegion1D, typename ConstMatrixRegion2D>
ElementT computeNWKDEMetric(ConstMatrixRegion1D result,
                            ConstMatrixRegion2D data,
                            ConstMatrixRegion1D y,
                            ConstMatrixRegion1D indices)
{
    ElementT a, b, diff, sum = 0;
    IndexT outputTimeIndex, count = 0;

    for (IndexT i = 0; i < indices.count(); ++i) {
        a = result.cell(i);
        b = data.cell(y.cell(0), indices.cell(i) + y.cell(1));
        if (!ISNAN(a) && !ISNAN(b)) {
            diff = a - b;
#ifdef DEBUG
            fprintf(stderr, "Metric: %g = (%g - %g)\n", diff, a, b);
#endif
            sum += diff * diff;
            count++;
        }
    }

#ifdef DEBUG
    fprintf(stderr, "sum = %g, count = %d\n", sum, count);
#endif
    if (count > 0) {
        sum /= count;
    } else {
        sum = BIGNUM;
    }
    return -sum;
}

%}

/* Wrapper around computeNWKDEMetric function.
 * Can be used with NWKDEVA transform.
 *
 * WARNING: This metric assumes that the true value the regression aims to
 * produce is located in TESTDATA at the location pointed to by TRAINY, even
 * though strictly speaking those values are meant only as indexes into
 * TRAINDATA, not TESTDATA.
 *
 * If this condition is not met, use a different metric transform to
 * measure output accuracy.
 */
transform NWKDEMetric
from RESULT[q], TRAINDATA[m,n], TRAINX[2,p], TRAINY[2], TRAININDICES[l],
     TESTDATA[mPrime,nPrime], TESTX[2,p], TESTINDICES[q],
     DIRFLAGS[m], SPLIT, MASKWIDTH
to METRIC
{
    to   (METRIC metric)
    from (RESULT result, TESTDATA testData, TRAINY trainY,
          TESTINDICES testIndices)
    {
        metric = computeNWKDEMetric(result, testData, trainY, testIndices);
    }
}

/* Similar to NWKDEMetric, but also accepts kernelWidths argument.
 * Can be used with NWKDE transform.
 *
 * WARNING: This metric assumes that the true value the regression aims to
 * produce is located in TESTDATA at the location pointed to by TRAINY, even
 * though strictly speaking those values are meant only as indexes into
 * TRAINDATA, not TESTDATA.
 *
 * If this condition is not met, use a different metric transform to
 * measure output accuracy.
 */
transform NWKDEMetric2
from RESULT[q], TRAINDATA[m,n], TRAINX[2,p], TRAINY[2], TRAININDICES[l],
     TESTDATA[m2,n2], TESTX[2,p], TESTINDICES[q],
     DIRFLAGS[m], KERNELWIDTHS[m], SPLIT, MASKWIDTH
to METRIC
{
    to   (METRIC metric)
    from (RESULT result, TESTDATA testData, TRAINY trainY,
          TESTINDICES testIndices)
    {
        metric = computeNWKDEMetric(result, testData, trainY, testIndices);
    }
}

#endif // NWKDEMETRIC_PBCC
